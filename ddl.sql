SET 'auto.offset.reset'='earliest';

CREATE OR REPLACE TABLE "TBL_CART_PRICED_PRODUCT" (ID STRUCT<ID_PRODUCT INTEGER, ID_CART INTEGER> PRIMARY KEY, QUANTITY BIGINT, PRICE DECIMAL(20, 6))
  WITH (kafka_topic='cart_priced_product', partitions=1, key_format='JSON', value_format='JSON_SR');

CREATE OR REPLACE TABLE "TBL_CART_TOTAL_PRICE"
  WITH (kafka_topic='cart_total_price', partitions=1, key_format='JSON', value_format='JSON_SR')
  AS SELECT STRUCT(`_id`:=TBL_CART_PRICED_PRODUCT.ID->ID_CART) ID,   SUM((TBL_CART_PRICED_PRODUCT.QUANTITY * TBL_CART_PRICED_PRODUCT.PRICE)) TOTAL FROM "TBL_CART_PRICED_PRODUCT" GROUP BY STRUCT(`_id`:=TBL_CART_PRICED_PRODUCT.ID->ID_CART);

CREATE OR REPLACE STREAM "STRM_PS_CART_PRODUCT" (COMP_KEY STRUCT<ID_CART INTEGER, ID_PRODUCT INTEGER> KEY, ID_CART BIGINT, ID_PRODUCT BIGINT, ID_ADDRESS_DELIVERY BIGINT, ID_SHOP BIGINT, ID_PRODUCT_ATTRIBUTE BIGINT, ID_CUSTOMIZATION BIGINT, QUANTITY BIGINT, DATE_ADD TIMESTAMP, __DELETED STRING)
  WITH (kafka_topic='fa560f9da14.prestashop.ps_cart_product', partitions=1, key_format='JSON', value_format='JSON_SR');

CREATE OR REPLACE STREAM "STRM_CART_PRODUCT_BY_ID_PRODUCT"
  WITH (kafka_topic='cart_product_by_id_cart', partitions=1, key_format='JSON', value_format='JSON_SR')
  AS SELECT STRM_PS_CART_PRODUCT.COMP_KEY->ID_PRODUCT ID_PRODUCT,   STRM_PS_CART_PRODUCT.COMP_KEY->ID_CART ID_CART,   (CASE WHEN (STRM_PS_CART_PRODUCT.__DELETED = 'true') THEN CAST(0 as BIGINT) ELSE STRM_PS_CART_PRODUCT.QUANTITY END) QUANTITY FROM "STRM_PS_CART_PRODUCT" PARTITION BY STRM_PS_CART_PRODUCT.COMP_KEY->ID_PRODUCT;

CREATE OR REPLACE TABLE "TBL_PRODUCT" (ID_PRODUCT INTEGER PRIMARY KEY, PRICE DECIMAL(20, 6))
  WITH (kafka_topic='product', partitions=1, key_format='JSON', value_format='JSON_SR');

CREATE OR REPLACE STREAM "STRM_CART_PRICED_PRODUCT"
  WITH (kafka_topic='cart_priced_product', partitions=1, key_format='JSON', value_format='JSON_SR')
  AS SELECT STRUCT(ID_PRODUCT:=CART_PDTS.ID_PRODUCT, ID_CART:=CART_PDTS.ID_CART) ID,   CART_PDTS.QUANTITY QUANTITY,   PDTS.PRICE PRICE FROM "STRM_CART_PRODUCT_BY_ID_PRODUCT" CART_PDTS INNER JOIN "TBL_PRODUCT" PDTS
  ON CART_PDTS.ID_PRODUCT = PDTS.ID_PRODUCT
 PARTITION BY STRUCT(ID_PRODUCT:=CART_PDTS.ID_PRODUCT, ID_CART:=CART_PDTS.ID_CART);

CREATE OR REPLACE STREAM "STRM_PS_PRODUCT" (COMP_KEY STRUCT<ID_PRODUCT INTEGER> KEY, ID_PRODUCT BIGINT, ID_SUPPLIER BIGINT, ID_MANUFACTURER BIGINT, ID_CATEGORY_DEFAULT BIGINT, ID_SHOP_DEFAULT BIGINT, ID_TAX_RULES_GROUP BIGINT, ON_SALE INTEGER, ONLINE_ONLY INTEGER, EAN13 STRING, ISBN STRING, UPC STRING, MPN STRING, ECOTAX DECIMAL(17, 6), QUANTITY INTEGER, MINIMAL_QUANTITY BIGINT, LOW_STOCK_THRESHOLD INTEGER, LOW_STOCK_ALERT INTEGER, PRICE DECIMAL(20, 6), WHOLESALE_PRICE DECIMAL(20, 6), UNITY STRING, UNIT_PRICE_RATIO DECIMAL(20, 6), ADDITIONAL_SHIPPING_COST DECIMAL(20, 6), REFERENCE STRING, SUPPLIER_REFERENCE STRING, LOCATION STRING, WIDTH DECIMAL(20, 6), HEIGHT DECIMAL(20, 6), DEPTH DECIMAL(20, 6), WEIGHT DECIMAL(20, 6), OUT_OF_STOCK BIGINT, ADDITIONAL_DELIVERY_TIMES INTEGER, QUANTITY_DISCOUNT INTEGER, CUSTOMIZABLE INTEGER, UPLOADABLE_FILES INTEGER, TEXT_FIELDS INTEGER, ACTIVE INTEGER, REDIRECT_TYPE STRING, ID_TYPE_REDIRECTED BIGINT, AVAILABLE_FOR_ORDER INTEGER, AVAILABLE_DATE DATE, SHOW_CONDITION INTEGER, CONDITION STRING, SHOW_PRICE INTEGER, INDEXED INTEGER, VISIBILITY STRING, CACHE_IS_PACK INTEGER, CACHE_HAS_ATTACHMENTS INTEGER, IS_VIRTUAL INTEGER, CACHE_DEFAULT_ATTRIBUTE BIGINT, DATE_ADD TIMESTAMP, DATE_UPD TIMESTAMP, ADVANCED_STOCK_MANAGEMENT INTEGER, PACK_STOCK_TYPE BIGINT, STATE BIGINT, __DELETED STRING)
  WITH (kafka_topic='fa560f9da14.prestashop.ps_product', partitions=1, key_format='JSON', value_format='JSON_SR');

CREATE OR REPLACE STREAM "STRM_PRODUCT"
  WITH (kafka_topic='product', partitions=1, key_format='JSON', value_format='JSON_SR')
  AS SELECT STRM_PS_PRODUCT.COMP_KEY->ID_PRODUCT ID_PRODUCT, STRM_PS_PRODUCT.PRICE PRICE FROM "STRM_PS_PRODUCT" PARTITION BY STRM_PS_PRODUCT.COMP_KEY->ID_PRODUCT;
